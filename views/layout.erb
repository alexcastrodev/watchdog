<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Watchdog - Job Monitor</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    
    <!-- Custom CSS -->
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        .main-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            margin: 20px auto;
            max-width: 1200px;
        }

        .header-section {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 20px 20px 0 0;
            text-align: center;
            padding: 2rem;
        }

        .header-section h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }

        .stats-card {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        }

        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            color: #667eea;
        }

        .nav-tabs .nav-link {
            border: none;
            border-radius: 0;
            color: #666;
            font-weight: 600;
            padding: 1rem 2rem;
            transition: all 0.3s ease;
        }

        .nav-tabs .nav-link:hover {
            background: rgba(102, 126, 234, 0.1);
            color: #667eea;
            border: none;
        }

        .nav-tabs .nav-link.active {
            background: rgba(102, 126, 234, 0.1);
            color: #667eea;
            border: none;
            border-bottom: 3px solid #667eea;
        }

        .job-card {
            transition: all 0.3s ease;
            border-left: 4px solid #667eea;
        }

        .job-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        }

        .job-card .card-body {
            overflow: hidden;
        }

        .job-card .property-row {
            min-height: 24px;
            align-items: flex-start;
        }

        .stack-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .refresh-btn {
            position: fixed;
            bottom: 30px;
            right: 30px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            color: white;
            font-size: 1.2rem;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            transition: all 0.3s ease;
        }

        .refresh-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 6px 20px rgba(0,0,0,0.3);
        }

        .loading {
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }

        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            color: #666;
        }

        .property-key {
            font-weight: 600;
            color: #495057;
        }

        .property-value {
            font-family: 'Monaco', 'Courier New', monospace;
            font-size: 0.9rem;
            color: #212529;
            word-break: break-all;
            overflow-wrap: anywhere;
            max-width: 250px;
        }

        .text-truncate-custom {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            max-width: 200px;
        }

        .path-text {
            font-family: 'Monaco', 'Courier New', monospace;
            font-size: 0.8rem;
            word-break: break-all;
            overflow-wrap: anywhere;
            line-height: 1.2;
        }

        .status-active {
            background-color: #d1edff;
            color: #0d6efd;
        }

        .status-inactive {
            background-color: #fff3cd;
            color: #664d03;
        }

        @media (max-width: 768px) {
            .header-section h1 {
                font-size: 2rem;
            }
            
            .main-container {
                margin: 10px;
                border-radius: 15px;
            }
            
            .header-section {
                border-radius: 15px 15px 0 0;
                padding: 1.5rem;
            }

            .property-value {
                font-size: 0.75rem;
                max-width: 150px;
            }

            .text-truncate-custom {
                max-width: 120px;
            }

            .path-text {
                font-size: 0.7rem;
            }
        }

        @media (max-width: 576px) {
            .property-value {
                max-width: 100px;
            }

            .text-truncate-custom {
                max-width: 80px;
            }

            .d-flex.justify-content-between {
                flex-direction: column;
                align-items: flex-start !important;
                gap: 0.25rem;
            }

            .job-card .d-flex.justify-content-between.align-items-start {
                flex-direction: row;
                align-items: flex-start !important;
                gap: 0.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="container-fluid p-3">
        <div class="main-container">
            <%= yield %>
        </div>
    </div>

    <!-- YAML File Details Modal -->
    <div class="modal fade" id="yamlModal" tabindex="-1" aria-labelledby="yamlModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="yamlModalLabel">
                        <i class="bi bi-file-earmark-code"></i> YAML File Details
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="yamlContent">
                        <div class="text-center p-4">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="downloadYamlBtn">
                        <i class="bi bi-download"></i> Download
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Refresh Button -->
    <button class="refresh-btn btn" onclick="window.location.reload()" title="Refresh Dashboard">
        <i class="bi bi-arrow-clockwise"></i>
    </button>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Custom JS -->
    <script>
        // Tab persistence
        document.addEventListener('DOMContentLoaded', function() {
            const activeTab = localStorage.getItem('activeTab');
            if (activeTab) {
                const tabTrigger = document.querySelector(`[data-bs-target="#${activeTab}"]`);
                if (tabTrigger) {
                    new bootstrap.Tab(tabTrigger).show();
                }
            }
        });

        // Save active tab
        document.querySelectorAll('[data-bs-toggle="tab"]').forEach(function(tabTrigger) {
            tabTrigger.addEventListener('shown.bs.tab', function(event) {
                const targetId = event.target.getAttribute('data-bs-target').substring(1);
                localStorage.setItem('activeTab', targetId);
            });
        });

        // Auto-refresh every 30 seconds
        setTimeout(function() {
            window.location.reload();
        }, 30000);

        // Add loading animation to refresh button
        document.querySelector('.refresh-btn').addEventListener('click', function() {
            this.classList.add('loading');
        });

        // YAML file viewer function
        async function viewYamlFile(source, filename) {
            const modal = new bootstrap.Modal(document.getElementById('yamlModal'));
            const content = document.getElementById('yamlContent');
            const modalTitle = document.getElementById('yamlModalLabel');
            const downloadBtn = document.getElementById('downloadYamlBtn');
            
            // Show loading state
            content.innerHTML = `
                <div class="text-center p-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            `;
            
            modal.show();
            
            try {
                const response = await fetch(`/api/yaml/${source}/${filename}`);
                if (!response.ok) throw new Error('Failed to load file');
                
                const data = await response.json();
                
                // Update modal title
                const sourceLabel = source === 'jobs' ? 'Jobs' : 'Logs';
                modalTitle.innerHTML = `<i class="bi bi-file-earmark-code"></i> ${data.name}.yml <small class="text-muted">(${sourceLabel})</small>`;
                
                // Create content HTML
                content.innerHTML = `
                    <div class="mb-4">
                        <div class="row g-3 mb-3">
                            <div class="col-md-6">
                                <small class="text-muted">File Size:</small>
                                <div class="fw-bold">${data.size} bytes</div>
                            </div>
                            <div class="col-md-6">
                                <small class="text-muted">Last Modified:</small>
                                <div class="fw-bold">${data.last_modified}</div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-4">
                        <h6 class="border-bottom pb-2 mb-3">
                            <i class="bi bi-list-ul"></i> Parsed Content
                        </h6>
                        <div class="bg-light p-3 rounded">
                            ${formatYamlContent(data.content)}
                        </div>
                    </div>
                    
                    <div>
                        <h6 class="border-bottom pb-2 mb-3">
                            <i class="bi bi-code"></i> Raw YAML
                        </h6>
                        <pre class="bg-dark text-light p-3 rounded" style="max-height: 300px; overflow-y: auto; font-size: 0.9rem;"><code>${escapeHtml(data.raw_content)}</code></pre>
                    </div>
                `;
                
                // Set up download button
                downloadBtn.onclick = () => {
                    const blob = new Blob([data.raw_content], { type: 'text/yaml' });
                    const url = URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = `${data.name}.yml`;
                    a.click();
                    URL.revokeObjectURL(url);
                };
                
            } catch (error) {
                content.innerHTML = `
                    <div class="alert alert-danger" role="alert">
                        <i class="bi bi-exclamation-triangle"></i>
                        Error loading file: ${error.message}
                    </div>
                `;
            }
        }

        function formatYamlContent(content) {
            if (!content || typeof content !== 'object') {
                return '<div class="text-muted">No content available</div>';
            }
            
            let html = '';
            for (const [key, value] of Object.entries(content)) {
                html += `
                    <div class="row py-2 border-bottom">
                        <div class="col-4">
                            <span class="property-key fw-bold">${escapeHtml(key)}:</span>
                        </div>
                        <div class="col-8">
                            <span class="property-value path-text" style="word-break: break-all; font-size: 0.9rem;">
                                ${formatValue(value)}
                            </span>
                        </div>
                    </div>
                `;
            }
            return html;
        }

        function formatValue(value) {
            if (value === null) return '<em class="text-muted">null</em>';
            if (typeof value === 'boolean') return `<code class="text-info">${value}</code>`;
            if (typeof value === 'number') return `<code class="text-warning">${value}</code>`;
            if (typeof value === 'object') {
                if (Array.isArray(value)) {
                    return `<code class="text-success">[Array with ${value.length} items]</code>`;
                }
                return `<code class="text-primary">{Object with ${Object.keys(value).length} keys}</code>`;
            }
            return `<code>${escapeHtml(String(value))}</code>`;
        }

        function escapeHtml(text) {
            const div = document.createElement('div');
            div.textContent = text;
            return div.innerHTML;
        }

        // Error handling
        window.addEventListener('error', function(e) {
            console.error('Resource loading error:', e);
        });
    </script>
</body>
</html>